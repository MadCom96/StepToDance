version: "3"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: fast-api
    container_name: fast-api
    ports:
      - "8000:8000"
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    restart: always
    networks:
      - steptodance_default
networks:
  steptodance_default:
    external: true
  # kafka1:
  #   image: confluentinc/cp-kafka:7.6.0
  #   hostname: kafka1
  #   container_name: kafka1-ai
  #   ports:
  #     - ${KAFKA1_BINDING_PORT}:9092
  #   environment:
  #     KAFKA1_BINDING_PORT: ${KAFKA1_BINDING_PORT}
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
  #     KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
  #     KAFKA_DELETE_TOPIC_ENABLE: "true"
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
  #     CLUSTER_ID: kafka-docker-cluster-1
  #     ALLOW_PLAINTEXT_LISTENER: 'yes'
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
  # kafka2:
  #   image: confluentinc/cp-kafka:7.6.0
  #   hostname: kafka2
  #   container_name: kafka2-ai
  #   ports:
  #     - ${KAFKA2_BINDING_PORT}:9093
  #   environment:
  #     KAFKA2_BINDING_PORT: ${KAFKA2_BINDING_PORT}
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
  #     KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
  #     KAFKA_DELETE_TOPIC_ENABLE: "true"
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
  #     CLUSTER_ID: kafka-docker-cluster-1
  #     ALLOW_PLAINTEXT_LISTENER: 'yes'
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
  # kafka3:
  #   image: confluentinc/cp-kafka:7.6.0
  #   hostname: kafka3
  #   container_name: kafka3-ai
  #   ports:
  #     - ${KAFKA3_BINDING_PORT}:9094
  #   environment:
  #     KAFKA3_BINDING_PORT: ${KAFKA3_BINDING_PORT}
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
  #     KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
  #     KAFKA_DELETE_TOPIC_ENABLE: "true"
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
  #     CLUSTER_ID: kafka-docker-cluster-1
  #     ALLOW_PLAINTEXT_LISTENER: 'yes'
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui-ai
  #   ports:
  #     - ${KAFKA_UI_BINDING_PORT}:8080
  #   depends_on:
  #     - kafka1
  #     - kafka2
  #     - kafka3
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: kafka-docker-cluster-1
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092